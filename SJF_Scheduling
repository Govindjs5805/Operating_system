#include<stdio.h>

int main() {
    int n, i, j;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Invalid input\n");
        return 1;
    }

    int is_completed[n];
    int at[n], bt[n], wt[n], ct[n], tat[n];
    float avg_wt = 0, avg_tat = 0;
    int total_wt = 0, total_tat = 0;

    for (i = 0; i < n; i++) {
        is_completed[i] = 0;
    }

    printf("Enter the arrival time and burst time for each process:\n");
    for (i = 0; i < n; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d %d", &at[i], &bt[i]);
    }

    int curr = 0, completed = 0;
    while (completed < n) {
        int idx = -1;
        int min_burst = 999999;

        for (i = 0; i < n; i++) {
            if (at[i] <= curr && is_completed[i] == 0) {
                if (bt[i] < min_burst || (bt[i] == min_burst && at[i] < at[idx])) {
                    min_burst = bt[i];
                    idx = i;
                }
            }
        }

        if (idx == -1) {
            curr++;
        } else {
            ct[idx] = curr + bt[idx];
            tat[idx] = ct[idx] - at[idx];
            wt[idx] = tat[idx] - bt[idx];
            total_wt += wt[idx];
            total_tat += tat[idx];

            is_completed[idx] = 1;
            completed++;
            curr = ct[idx];
        }
    }

    avg_wt = (float)total_wt / n;
    avg_tat = (float)total_tat / n;

    printf("Process\tArrival Time\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time\n");
    for (i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n", i + 1, at[i], bt[i], ct[i], tat[i], wt[i]);
    }

    printf("Average Waiting Time: %.2f\n", avg_wt);
    printf("Average Turnaround Time: %.2f\n", avg_tat);

    return 0;
}
